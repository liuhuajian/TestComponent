// Top-level build file where you can add configuration options common to all sub-projects/modules.
import com.lhj.versionplugin.*
buildscript {
    ext.kotlin_version = "1.6.10"
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://jitpack.io' }
        google()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.3"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.tencent.mm:AndResGuard-gradle-plugin:1.2.20'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

plugins {
    //应用versionplugin插件
    id "com.lhj.versionplugin" apply false
}

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://jitpack.io' }
        mavenCentral()
        google()
    }
}

subprojects { subproject ->
    // 默认应用所有子项目中
    apply plugin: 'com.lhj.versionplugin'
    //对所有项目统一约束资源前缀
    afterEvaluate {
        android{
            resourcePrefix "${project.name}_"
        }

    }
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-kapt'
//    apply plugin: 'kotlin-android-extensions'
    // 如果想应用到某个子项目中，可以通过 subProject.name 来判断应用在哪个子项目中
    // subProject.name 是你子项目的名字，示例如下
    // 官方文档地址：https://guides.gradle.org/creating-multi-project-builds/#add_documentation
    switch (subproject.name) {
        case "app":
            apply plugin:'com.android.application'
            break
        case "modulefunction":
            if (BuildConfig.moduleFuctionRun){
                apply plugin:'com.android.application'
            }else {
                apply plugin:'com.android.library'
            }
            break
        default:
            apply plugin:'com.android.library'
            break
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}